<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.vaadin</groupId>
    <artifactId>com.vaadin.spring.roo.addon.root</artifactId>
    <version>1.1.1</version>
  </parent>
  <groupId>com.vaadin</groupId>
  <artifactId>com.vaadin.spring.roo.addon</artifactId>
  <packaging>bundle</packaging>
  <name>Vaadin Plug-in for Spring Roo</name>
  <organization>
    <name>Vaadin Ltd</name>
    <url>http://vaadin.com/</url>
  </organization>
  <licenses>
    <license>
      <name>GNU General Public License (GPL), Version 3.0</name>
      <url>http://www.gnu.org/copyleft/gpl.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <description>Spring Roo addon for creating rich internet applications with Vaadin.</description>
  
  <properties>
    <!-- Overridden on build server -->
    <vaadin.roo.obr.repository>vaadin-roo::default::file://${project.build.directory}/obr</vaadin.roo.obr.repository>
    <vaadin.deployment.repository>httppgp://oss.sonatype.org/content/repositories/vaadin-releases</vaadin.deployment.repository>
  </properties>

  <dependencies>
    <!-- OSGi -->
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>4.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <version>4.1.0</version>
    </dependency>
    <!-- Apache Felix -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.scr.annotations</artifactId>
      <version>1.2.0</version>
    </dependency>
    <!-- Spring Roo modules -->
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.addon.javabean</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.addon.jpa</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.addon.plural</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.addon.web.mvc.controller</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.classpath</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.file.monitor</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.metadata</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.process.manager</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.project</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.support</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.support.osgi</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.shell</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.model</artifactId>
      <version>${roo.version}</version>
      <type>bundle</type>
    </dependency>
    <dependency>
      <groupId>org.springframework.roo</groupId>
      <artifactId>org.springframework.roo.bootstrap</artifactId>
      <version>${roo.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>1.0-beta-6</version>
      </extension>
    </extensions>
    <plugins>
      <!-- OBR -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.4</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <_include>${project.build.directory}/build-number.mf</_include>
            <!-- <Export-Package>${project.artifactId}.*;version=${project.version}</Export-Package> -->
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Copyright>Copyright ${project.organization.name}. All Rights Reserved.</Bundle-Copyright>
            <!-- <Bundle-DocURL>${project.url}</Bundle-DocURL>-->
            <Bundle-DocURL>http://vaadin.com/</Bundle-DocURL>
          </instructions>
          
          <remoteOBR>true</remoteOBR>
          <!-- Local OBR repository information - use obrDeploymentRepository instead -->
          <!-- <obrRepository>${build.outputDirectory}/obr/repository.xml</obrRepository>-->
          
          <!-- Location of the artifact - only valid for releases, not snapshots -->
          <bundleUrl>${vaadin.deployment.repository}/com/vaadin/${project.artifactId}/${project.version}/${project.artifactId}-${project.version}.jar</bundleUrl>
          <!-- This OBR repository.xml will be updated -->
          <obrDeploymentRepository>${vaadin.roo.obr.repository}</obrDeploymentRepository>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-scr-plugin</artifactId>
        <version>1.4.2</version>
        <executions>
          <execution>
            <id>generate-scr-scrdescriptor</id>
            <goals>
              <goal>scr</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <parseJavaDoc>false</parseJavaDoc>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>${project.build.directory}/../../target/all</outputDirectory>
          <!-- <outputDirectory>${project.build.directory}/all</outputDirectory> -->
          <silent>true</silent>
          <includeScope>compile</includeScope>
          <excludeArtifactIds>org.apache.felix.scr.annotations</excludeArtifactIds>
          <excludeGroupIds>org.osgi</excludeGroupIds>
        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <id>copy-jars-for-possible-assembly</id>
            <phase>package</phase>
            <configuration>
              <tasks>
                <copy todir="${project.build.directory}/../../target/all" preservelastmodified="true">
                  <fileset dir="${project.build.directory}">
                    <include name="*.jar" />
                    <exclude name="*-tests.jar" />
                    <exclude name="*-sources.jar" />
                  </fileset>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- From org.springframework.roo:org.springframework.roo.osgi.roo.bundle -->
<!--      <plugin>-->
<!--        <groupId>org.springframework.roo</groupId>-->
<!--        <artifactId>org.springframework.roo.mojo.addon</artifactId>-->
<!--        <version>${roo.version}</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <id>generate-roo-info</id>-->
<!-- comment out: <phase>compile</phase> -->
<!--            <goals>-->
<!--              <goal>roo-addon</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
      <!-- Other plugins -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>echo</executable>
          <arguments>
            <argument>Svn-Revision:</argument>
            <argument>${vcs.number}</argument>
          </arguments>
          <outputFile>${project.build.directory}/build-number.mf</outputFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2-beta-5</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
